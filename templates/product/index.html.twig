{% extends 'base.html.twig' %}

{% block body %}
	<div class="container mt-5">
		<div
			class="row">
			<!-- Product Images -->
			<div class="col-md-6 mb-4">
				<img src="{{product.image[0].url}}" alt="Product" class="img-fluid rounded mb-3 product-image" id="mainImage">
			</div>

			<div class="col-md-6">
				<h2 class="mb-3">{{product.name | trans}}</h2>
				<div class="mb-3">
					<span class="h4 me-2">${{product.price}}</span>
					<span class="text-muted">
						<s>$399.99</s>
					</span>
				</div>
				<p id="stock-display" class="mb-4">Stock :
					{{ product.stock }}</p>
				{{ form_start(form) }}
				<div class="mb-4">
					{{ form_label(form.quantity, 'Quantity:', {'label_attr': {'class': 'form-label'}}) }}
					{% if product.stock > 0 %}
						{{ form_widget(form.quantity, {'attr': {'min': 1, 'max': product.stock}}) }}
					{% else %}
						<p>Ce produit n'est plus disponible.</p>
					{% endif %}
				</div>
				{{ form_row(form._token) }}
				{{ form_widget(form.productPrice) }}
				{{ form_widget(form.productId) }}

				{{ form_widget(form.add, {
        		'attr': {
					'class': 'btn btn-primary btn-lg mb-3 me-2',
					'disabled': product.stock <= 0 or not is_granted('IS_AUTHENTICATED_FULLY')}}) }}
				{{ form_end(form, {'render_rest': false}) }}


				<div class="d-flex">
					<div class="mt-4">
						<h5>Catégories</h5>
						<ul>
							{% for category in product.categories %}
								<li>
									<a href="{{ path('app_category', {'id': category.id, 'name': category.name|lower|replace({' ': '_'})}) }}">{{ category.name }}</a>
								</li>
							{% endfor %}
						</ul>
					</div>
					<div class="mt-4">
						<h5>VTuber</h5>
						<ul>
							{% for vtuber in product.vtuber %}
								<li>
									<a>{{vtuber.name }}</a>
								</li>
							{% endfor %}
						</ul>
					</div>
				</div>
			</div>
		</div>
	</div>
	 <script>
			const productId = '{{ product.id }}';
	const mercureHubUrl = '{{ mercureHubUrl|e('js') }}';
	
	// Écouter les mises à jour du produit via Mercure
	const topicUrl = `/products/${productId}/stock`;
	const eventSource = new EventSource(mercureHubUrl + '?topic=' + encodeURIComponent(topicUrl));
	
	eventSource.onopen = () => console.log('Connexion ouverte avec le hub Mercure');
	eventSource.onerror = (error) => console.error('Erreur avec Mercure :', error);
	
	
	eventSource.onmessage = function (event) {
	const data = JSON.parse(event.data);
	
	console.log('Mise à jour reçue pour le produit :', data);
	const stockDisplay = document.getElementById('stock-display');
	if (stockDisplay) {
	stockDisplay.innerText = `Stock : ${
	data.stock
	}`;
	}
	
	const buyButton = document.getElementById('buy-button');
	if (data.stock <= 0 && buyButton) {
	buyButton.disabled = true;
	alert('Le produit est en rupture de stock !');
	}
	};
		</script>
{% endblock %}
